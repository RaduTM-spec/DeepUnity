#pragma kernel MatMul

RWStructuredBuffer<float> leftArr;
RWStructuredBuffer<float> rightArr;
RWStructuredBuffer<float> resultArr;

int w1; // left width
int h1w2; // left height or right width
int h2; // right height

[numthreads(10, 10, 8)]
void MatMul(uint3 id : SV_DispatchThreadID)
{
    if (id.x < w1 && id.y < h2)
    {
        float sum = 0.;
        for (uint i = 0; i < h1w2; i++)
        {
            uint leftIndex = id.z * w1 * h1w2 + i * w1 + id.x;
            uint rightIndex = id.z * h1w2 * h2 + id.y * h1w2 + i;
                    
            sum += leftArr[leftIndex] * rightArr[rightIndex];
        }
        
        uint resultIndex = id.z * w1 * h2 + id.y * w1 + id.x;
        resultArr[resultIndex] = sum;
    }
}