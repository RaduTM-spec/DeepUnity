#pragma kernel MatMul

RWStructuredBuffer<float> leftArr;
RWStructuredBuffer<float> rightArr;
RWStructuredBuffer<float> resultArr;

int leftWidth;
int leftHeightRightWidth;
int rightHeight;

[numthreads(32, 32, 1)]
void MatMul(uint3 id : SV_DispatchThreadID)
{
    if (id.x < leftWidth && id.y < rightHeight)
    {
        float sum = 0.;
        for (uint i = 0; i < leftHeightRightWidth; i++)
        {
            uint leftIndex = id.z * leftWidth * leftHeightRightWidth + i * leftWidth + id.x;
            uint rightIndex = id.z * leftHeightRightWidth * rightHeight + id.y * leftHeightRightWidth + i;
                    
            sum += leftArr[leftIndex] * rightArr[rightIndex];
        }
        
        uint resultIndex = id.z * leftWidth * rightHeight + id.y * leftWidth + id.x;
        resultArr[resultIndex] = sum;
    }
}